#ifndef _GEN_CIRCULATION_CONFIG_H
#define _GEN_CIRCULATION_CONFIG_H

// THIS FILE IS AUTOGENERATED
// EDIT GENCONFIG.PY AND THE CONFIG FILE TO MODIFY 

#include <array>
#include <string>

namespace config {
	namespace node {
		constexpr char trajectory_node_name[] = "trajectory";
		constexpr char transform_node_name[] = "transform_batch_server";
		constexpr char image_topic[] = "/forwardCamera/image_raw";
		constexpr char camerainfo_topic[] = "/forwardCamera/camera_info";
		constexpr char velocity_topic[] = "/ZOE2UTBM/car/velocity";
		constexpr char pointcloud_topic[] = "/lidar";
		constexpr char trajectory_topic[] = "/navigation/trajectory";
		constexpr char direction_topic[] = "/navigation/direction";
		constexpr char traffic_sign_topic[] = "/navigation/traffic_sign";
		constexpr char speed_topic[] = "/ZOE2UTBM/control/speed";
		constexpr char speed_cap_topic[] = "/ZOE2UTBM/control/max_speed";
		constexpr char steering_angle_topic[] = "/ZOE2UTBM/control/steering_angle";
		constexpr char transform_service_name[] = "/circulation/TransformBatch";
		constexpr char drop_service_name[] = "/circulation/DropVelocity";
		constexpr char road_frame[] = "base_link";
		constexpr char world_frame[] = "map";
		constexpr bool visualize = true;
		constexpr bool time_discrepancy = false;
	}
	namespace transform {
		constexpr float sim_interval = 0.005;
	}
	namespace control {
		constexpr float target_speed = 8.0;
		constexpr float k = 0.1;
		constexpr float Lfc = 5.0;
		constexpr float Kp = 0.5;
		constexpr float dt = 0.1;
		constexpr float WB = 2.588;
		constexpr int brake_distance = 10;
	}
	namespace environment {
		constexpr float lane_width = 3.5;
		constexpr float crosswalk_width = 0.5;
	}
	namespace birdeye {
		constexpr float x_range = 15.0;
		constexpr float y_range = 21.8;
		constexpr float roi_y = 3.0;
		constexpr int birdeye_size = 500;
	}
	namespace preprocess {
		constexpr int threshold_window = 33;
		constexpr int threshold_bias = -5;
		constexpr int open_kernel_size = 4;
		constexpr int close_kernel_size = 5;
	}
	namespace markings {
		constexpr float size_tolerance = 0.2;
		constexpr float transverse_angle = 0.314;
		namespace crosswalk {
			constexpr float ev2_edge_part = 0.5;
			constexpr float max_rmse = 0.6;
			constexpr float dbscan_epsilon = 0.1;
			constexpr int min_bands = 3;
		}
	}
	namespace intersection {
		namespace confidence_threshold {
			constexpr float trafficsign = 0.6;
			constexpr float marking = 0.6;
		}
		namespace intersection_hint_match_threshold {
			constexpr float trafficsign = 1.0;
			constexpr float marking = 3.85;
		}
		constexpr int mode_switch_distance = 3;
		constexpr float default_rejoin_distance = 15.0;
		constexpr float rejoin_factor = 0.8;
		constexpr float min_turn_radius = 5.0;
		constexpr float max_turn_radius = 25.0;
		constexpr float default_turn_radius = 12.0;
		constexpr float hint_detection_buffer = 15.0;
		constexpr float hint_clustering_distance = 2.0;
		constexpr float hint_y_threshold = -4.0;
		constexpr float min_confidence = 0.9;
	}
	namespace trajectory {
		constexpr int history_size = 15;
		constexpr int line_reliability_range = 22;
		constexpr int line_reliability_dampening = 3;
		constexpr float line_reliability_extension_penalty = 1.8;
		constexpr float trajectory_step = 0.5;
		constexpr int trajectory_range = 15;
		constexpr int trajectory_start = 0;
		constexpr float line_score_threshold = 0.5;
		constexpr float trajectory_score_threshold = 0.5;
		constexpr float max_output_angle = 0.279;
		constexpr float max_parallel_distance = 0.9;
	}
	namespace lines {
		constexpr int savgol_degree = 2;
		constexpr int initial_filter_window = 5;
		constexpr int smoothing_filter_window = 9;
		constexpr int branch_step = 10;
		constexpr int min_branch_length = 8;
		constexpr int min_line_length = 35;
		constexpr int max_curvature_metric = 1;
		constexpr int curvature_filter_size = 9;
		constexpr int curvature_filter_deviation = 1;
		constexpr int merge_max_distance = 140;
		constexpr int estimate_start = 1;
		constexpr int estimate_end = 8;
		constexpr float max_angle_diff = 0.86;
		constexpr int max_rmse = 2;
	}
	namespace fuzzy_lines {
		constexpr int local_area_x = 5;
		constexpr int local_area_y = 10;
		constexpr int base_score = 4;
		namespace centers {
			constexpr float forward_distance[3] = {4.8, 10.8, 21.8};
			constexpr float line_distance[3] = {0.0, 1.0, 2.0};
			constexpr float line_lengths[3] = {10.0, 5.0, 0.0};
			constexpr float parallel_distances[3] = {0.0, 0.3, 1.0};
			constexpr float parallel_angles[3] = {0.0, 0.51, 1.24};
			constexpr float output[5] = {0.0, 0.25, 0.5, 0.8, 1.0};
		}
		namespace malus {
			constexpr int forward_distance[3] = {0, -1, -3};
			constexpr int line_distance[3] = {0, -2, -3};
			constexpr int line_lengths[3] = {0, -1, -2};
			constexpr int parallel_distances[3] = {0, -2, -5};
			constexpr int parallel_angles[3] = {0, -1, -5};
		}
		constexpr float lane_selection_threshold = 0.7;
		constexpr float single_line_selection_threshold = 0.6;
		constexpr float vertical_angle_tolerance = 0.5;
		constexpr float main_angle_cut = 0.43;
	}
}

#endif
